"""initial migration

Revision ID: ea9af88e0fc6
Revises: 
Create Date: 2025-01-10 14:46:14.368602+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea9af88e0fc6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('jti', sa.String(), nullable=False),
    sa.Column('token_type', sa.String(), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('blacklisted_tokens', schema=None) as batch_op:
        batch_op.create_index('ix_blacklisted_tokens_expires', ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_blacklisted_tokens_jti'), ['jti'], unique=True)
        batch_op.create_index(batch_op.f('ix_blacklisted_tokens_token'), ['token'], unique=True)
        batch_op.create_index('ix_blacklisted_tokens_token_expires', ['token', 'expires_at'], unique=False)
        batch_op.create_index('ix_blacklisted_tokens_user_expires', ['user_id', 'expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_blacklisted_tokens_user_id'), ['user_id'], unique=False)

    op.create_table('tags',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_id'), ['id'], unique=False)
        batch_op.create_index('ix_tags_name', ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index('ix_users_password_reset', ['password_reset_token', 'password_reset_expires'], unique=False)
        batch_op.create_index('ix_users_role_active', ['role', 'is_active'], unique=False)
        batch_op.create_index('ix_users_verification', ['verification_token', 'is_verified'], unique=False)

    op.create_table('documents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('PDF', 'DOCX', 'XLSX', 'IMAGE', name='documenttype'), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_documents_file_hash'), ['file_hash'], unique=False)
        batch_op.create_index(batch_op.f('ix_documents_id'), ['id'], unique=False)
        batch_op.create_index('ix_documents_name', ['name'], unique=False)
        batch_op.create_index('ix_documents_type', ['type'], unique=False)
        batch_op.create_index('ix_documents_user_id_file_hash', ['user_id', 'file_hash'], unique=True)
        batch_op.create_index('ix_documents_user_id_uploaded_at', ['user_id', sa.text('uploaded_at DESC')], unique=False)

    op.create_table('analysis_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('TABLE_DETECTION', 'TEXT_EXTRACTION', 'TEXT_SUMMARIZATION', 'TEMPLATE_CONVERSION', name='analysistype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='analysisstatus'), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=False),
    sa.Column('status_message', sa.String(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_analysis_results_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_document_id'), ['document_id'], unique=False)
        batch_op.create_index('ix_analysis_results_document_id_type', ['document_id', 'type'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_analysis_results_type'), ['type'], unique=False)

    op.create_table('document_tags',
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('tag_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('document_id', 'tag_id')
    )
    with op.batch_alter_table('document_tags', schema=None) as batch_op:
        batch_op.create_index('ix_document_tags_document_id', ['document_id'], unique=False)
        batch_op.create_index('ix_document_tags_tag_id', ['tag_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('document_tags', schema=None) as batch_op:
        batch_op.drop_index('ix_document_tags_tag_id')
        batch_op.drop_index('ix_document_tags_document_id')

    op.drop_table('document_tags')
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analysis_results_type'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_status'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_id'))
        batch_op.drop_index('ix_analysis_results_document_id_type')
        batch_op.drop_index(batch_op.f('ix_analysis_results_document_id'))
        batch_op.drop_index(batch_op.f('ix_analysis_results_created_at'))

    op.drop_table('analysis_results')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index('ix_documents_user_id_uploaded_at')
        batch_op.drop_index('ix_documents_user_id_file_hash')
        batch_op.drop_index('ix_documents_type')
        batch_op.drop_index('ix_documents_name')
        batch_op.drop_index(batch_op.f('ix_documents_id'))
        batch_op.drop_index(batch_op.f('ix_documents_file_hash'))

    op.drop_table('documents')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_verification')
        batch_op.drop_index('ix_users_role_active')
        batch_op.drop_index('ix_users_password_reset')
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index('ix_tags_name')
        batch_op.drop_index(batch_op.f('ix_tags_id'))

    op.drop_table('tags')
    with op.batch_alter_table('blacklisted_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_blacklisted_tokens_user_id'))
        batch_op.drop_index('ix_blacklisted_tokens_user_expires')
        batch_op.drop_index('ix_blacklisted_tokens_token_expires')
        batch_op.drop_index(batch_op.f('ix_blacklisted_tokens_token'))
        batch_op.drop_index(batch_op.f('ix_blacklisted_tokens_jti'))
        batch_op.drop_index('ix_blacklisted_tokens_expires')

    op.drop_table('blacklisted_tokens')
    # ### end Alembic commands ###
