"""update_analysis_models_for_registry_system

Revision ID: f0fbc78ad602
Revises: 3b7fd7582895
Create Date: 2025-02-15 06:51:39.608430+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f0fbc78ad602'
down_revision: Union[str, None] = '3b7fd7582895'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('algorithms', sa.Column('code', sa.String(length=100), nullable=False))
    op.add_column('algorithms', sa.Column('implementation_path', sa.String(length=255), nullable=False))
    op.create_unique_constraint('uix_algorithm_step_code_version', 'algorithms', ['step_id', 'code', 'version'])
    op.drop_index('ix_analyses_analysis_type_id', table_name='analyses')
    op.drop_index('ix_analyses_created_at', table_name='analyses')
    op.drop_index('ix_analyses_document_id', table_name='analyses')
    op.drop_index('ix_analyses_mode_status', table_name='analyses')
    op.drop_index('ix_analyses_status', table_name='analyses')
    op.add_column('analysis_steps', sa.Column('code', sa.String(length=100), nullable=False))
    op.add_column('analysis_steps', sa.Column('version', sa.String(length=20), nullable=False))
    op.add_column('analysis_steps', sa.Column('result_schema', sa.String(length=255), nullable=False))
    op.add_column('analysis_steps', sa.Column('implementation_path', sa.String(length=255), nullable=False))
    op.add_column('analysis_steps', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.alter_column('analysis_steps', 'name',
               existing_type=sa.VARCHAR(length=27),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_unique_constraint('uix_step_analysis_code_version', 'analysis_steps', ['analysis_type_id', 'code', 'version'])
    op.add_column('analysis_types', sa.Column('code', sa.String(length=100), nullable=False))
    op.add_column('analysis_types', sa.Column('version', sa.String(length=20), nullable=False))
    op.add_column('analysis_types', sa.Column('implementation_path', sa.String(length=255), nullable=False))
    op.add_column('analysis_types', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.alter_column('analysis_types', 'name',
               existing_type=sa.VARCHAR(length=19),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_unique_constraint('uix_analysis_type_code_version', 'analysis_types', ['code', 'version'])
    op.create_unique_constraint(None, 'analysis_types', ['code'])
    op.drop_index('ix_documents_archived_status', table_name='documents')
    op.drop_index('ix_documents_version', table_name='documents')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_documents_version', 'documents', ['previous_version_id'], unique=False)
    op.create_index('ix_documents_archived_status', 'documents', ['is_archived', 'archived_at', 'retention_until'], unique=False)
    op.drop_constraint(None, 'analysis_types', type_='unique')
    op.drop_constraint('uix_analysis_type_code_version', 'analysis_types', type_='unique')
    op.alter_column('analysis_types', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=19),
               existing_nullable=False)
    op.drop_column('analysis_types', 'is_active')
    op.drop_column('analysis_types', 'implementation_path')
    op.drop_column('analysis_types', 'version')
    op.drop_column('analysis_types', 'code')
    op.drop_constraint('uix_step_analysis_code_version', 'analysis_steps', type_='unique')
    op.alter_column('analysis_steps', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=27),
               existing_nullable=False)
    op.drop_column('analysis_steps', 'is_active')
    op.drop_column('analysis_steps', 'implementation_path')
    op.drop_column('analysis_steps', 'result_schema')
    op.drop_column('analysis_steps', 'version')
    op.drop_column('analysis_steps', 'code')
    op.create_index('ix_analyses_status', 'analyses', ['status'], unique=False)
    op.create_index('ix_analyses_mode_status', 'analyses', ['mode', 'status'], unique=False)
    op.create_index('ix_analyses_document_id', 'analyses', ['document_id'], unique=False)
    op.create_index('ix_analyses_created_at', 'analyses', ['created_at'], unique=False)
    op.create_index('ix_analyses_analysis_type_id', 'analyses', ['analysis_type_id'], unique=False)
    op.drop_constraint('uix_algorithm_step_code_version', 'algorithms', type_='unique')
    op.drop_column('algorithms', 'implementation_path')
    op.drop_column('algorithms', 'code')
    # ### end Alembic commands ### 